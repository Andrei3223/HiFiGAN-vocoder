defaults:
  - model: hifi_gan
  - writer: wandb
  - metrics: hifi
  - datasets: example
  # - datasets: onebatchtest 
  - dataloader: example
  - transforms: example_only_instance
  - _self_
optimizer_d:
  _target_: torch.optim.AdamW
  lr: 2e-4
  weight_decay: 1e-2
  betas: [0.8, 0.99]
lr_scheduler_d:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.999
optimizer_g:
  _target_: torch.optim.AdamW
  lr: 2e-4
  weight_decay: 1e-2
  betas: [0.8, 0.99]
lr_scheduler_g:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  gamma: 0.999
lambda_mel_loss: 45
lambda_fm_loss: 2
text_encoder:
  _target_: src.text_encoder.CTCTextEncoder
trainer:
  log_step: 1
  n_epochs: 1
  epoch_len: 20
  device_tensors: ["audio", "spectrogram"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: True # if True, will override the previous run with the same name
  monitor: "off" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 42
